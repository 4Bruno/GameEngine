#include "vulkan_local.h"

//https://github.com/SaschaWillems/Vulkan/blob/master/base/VulkanTools.cpp
b32
VH_GetSupportedDepthFormat(VkPhysicalDevice PhysicalDevice, VkFormat *DepthFormat, b32 UseHighestPrecision)
{
    b32 DepthFormatSupported = false;

    // Since all depth formats may be optional, we need to find a suitable depth format to use
    // Start with the highest precision packed format
    VkFormat DepthFormats[] = 
    {
        VK_FORMAT_D32_SFLOAT_S8_UINT,
        VK_FORMAT_D32_SFLOAT,
        VK_FORMAT_D24_UNORM_S8_UINT,
        VK_FORMAT_D16_UNORM_S8_UINT,
        VK_FORMAT_D16_UNORM
    };

    for (u32 FormatIndex = 0;
             FormatIndex < ArrayCount(DepthFormats);
             ++FormatIndex)
    {
        VkFormatProperties formatProps;
        VkFormat Format = DepthFormats[FormatIndex];
        vkGetPhysicalDeviceFormatProperties(PhysicalDevice, Format, &formatProps);

        // Format must support depth stencil attachment for optimal tiling
        if (formatProps.optimalTilingFeatures & VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT)
        {
            DepthFormatSupported = true;
            *DepthFormat = Format;
            if (UseHighestPrecision) break;
        }
    }

    return DepthFormatSupported;
}

void
PrintFormatsSupportedByColorAttachment()
{
    VkFormat FormatsToCheck[] = 
    {
        VK_FORMAT_UNDEFINED ,
        VK_FORMAT_R4G4_UNORM_PACK8 ,
        VK_FORMAT_R4G4B4A4_UNORM_PACK16 ,
        VK_FORMAT_B4G4R4A4_UNORM_PACK16 ,
        VK_FORMAT_R5G6B5_UNORM_PACK16 ,
        VK_FORMAT_B5G6R5_UNORM_PACK16 ,
        VK_FORMAT_R5G5B5A1_UNORM_PACK16 ,
        VK_FORMAT_B5G5R5A1_UNORM_PACK16 ,
        VK_FORMAT_A1R5G5B5_UNORM_PACK16 ,
        VK_FORMAT_R8_UNORM ,
        VK_FORMAT_R8_SNORM ,
        VK_FORMAT_R8_USCALED ,
        VK_FORMAT_R8_SSCALED ,
        VK_FORMAT_R8_UINT ,
        VK_FORMAT_R8_SINT ,
        VK_FORMAT_R8_SRGB ,
        VK_FORMAT_R8G8_UNORM ,
        VK_FORMAT_R8G8_SNORM ,
        VK_FORMAT_R8G8_USCALED ,
        VK_FORMAT_R8G8_SSCALED ,
        VK_FORMAT_R8G8_UINT ,
        VK_FORMAT_R8G8_SINT ,
        VK_FORMAT_R8G8_SRGB ,
        VK_FORMAT_R8G8B8_UNORM ,
        VK_FORMAT_R8G8B8_SNORM ,
        VK_FORMAT_R8G8B8_USCALED ,
        VK_FORMAT_R8G8B8_SSCALED ,
        VK_FORMAT_R8G8B8_UINT ,
        VK_FORMAT_R8G8B8_SINT ,
        VK_FORMAT_R8G8B8_SRGB ,
        VK_FORMAT_B8G8R8_UNORM ,
        VK_FORMAT_B8G8R8_SNORM ,
        VK_FORMAT_B8G8R8_USCALED ,
        VK_FORMAT_B8G8R8_SSCALED ,
        VK_FORMAT_B8G8R8_UINT ,
        VK_FORMAT_B8G8R8_SINT ,
        VK_FORMAT_B8G8R8_SRGB ,
        VK_FORMAT_R8G8B8A8_UNORM ,
        VK_FORMAT_R8G8B8A8_SNORM ,
        VK_FORMAT_R8G8B8A8_USCALED ,
        VK_FORMAT_R8G8B8A8_SSCALED ,
        VK_FORMAT_R8G8B8A8_UINT ,
        VK_FORMAT_R8G8B8A8_SINT ,
        VK_FORMAT_R8G8B8A8_SRGB ,
        VK_FORMAT_B8G8R8A8_UNORM ,
        VK_FORMAT_B8G8R8A8_SNORM ,
        VK_FORMAT_B8G8R8A8_USCALED ,
        VK_FORMAT_B8G8R8A8_SSCALED ,
        VK_FORMAT_B8G8R8A8_UINT ,
        VK_FORMAT_B8G8R8A8_SINT ,
        VK_FORMAT_B8G8R8A8_SRGB ,
        VK_FORMAT_A8B8G8R8_UNORM_PACK32 ,
        VK_FORMAT_A8B8G8R8_SNORM_PACK32 ,
        VK_FORMAT_A8B8G8R8_USCALED_PACK32 ,
        VK_FORMAT_A8B8G8R8_SSCALED_PACK32 ,
        VK_FORMAT_A8B8G8R8_UINT_PACK32 ,
        VK_FORMAT_A8B8G8R8_SINT_PACK32 ,
        VK_FORMAT_A8B8G8R8_SRGB_PACK32 ,
        VK_FORMAT_A2R10G10B10_UNORM_PACK32 ,
        VK_FORMAT_A2R10G10B10_SNORM_PACK32 ,
        VK_FORMAT_A2R10G10B10_USCALED_PACK32 ,
        VK_FORMAT_A2R10G10B10_SSCALED_PACK32 ,
        VK_FORMAT_A2R10G10B10_UINT_PACK32 ,
        VK_FORMAT_A2R10G10B10_SINT_PACK32 ,
        VK_FORMAT_A2B10G10R10_UNORM_PACK32 ,
        VK_FORMAT_A2B10G10R10_SNORM_PACK32 ,
        VK_FORMAT_A2B10G10R10_USCALED_PACK32 ,
        VK_FORMAT_A2B10G10R10_SSCALED_PACK32 ,
        VK_FORMAT_A2B10G10R10_UINT_PACK32 ,
        VK_FORMAT_A2B10G10R10_SINT_PACK32 ,
        VK_FORMAT_R16_UNORM ,
        VK_FORMAT_R16_SNORM ,
        VK_FORMAT_R16_USCALED ,
        VK_FORMAT_R16_SSCALED ,
        VK_FORMAT_R16_UINT ,
        VK_FORMAT_R16_SINT ,
        VK_FORMAT_R16_SFLOAT ,
        VK_FORMAT_R16G16_UNORM ,
        VK_FORMAT_R16G16_SNORM ,
        VK_FORMAT_R16G16_USCALED ,
        VK_FORMAT_R16G16_SSCALED ,
        VK_FORMAT_R16G16_UINT ,
        VK_FORMAT_R16G16_SINT ,
        VK_FORMAT_R16G16_SFLOAT ,
        VK_FORMAT_R16G16B16_UNORM ,
        VK_FORMAT_R16G16B16_SNORM ,
        VK_FORMAT_R16G16B16_USCALED ,
        VK_FORMAT_R16G16B16_SSCALED ,
        VK_FORMAT_R16G16B16_UINT ,
        VK_FORMAT_R16G16B16_SINT ,
        VK_FORMAT_R16G16B16_SFLOAT ,
        VK_FORMAT_R16G16B16A16_UNORM ,
        VK_FORMAT_R16G16B16A16_SNORM ,
        VK_FORMAT_R16G16B16A16_USCALED ,
        VK_FORMAT_R16G16B16A16_SSCALED ,
        VK_FORMAT_R16G16B16A16_UINT ,
        VK_FORMAT_R16G16B16A16_SINT ,
        VK_FORMAT_R16G16B16A16_SFLOAT ,
        VK_FORMAT_R32_UINT ,
        VK_FORMAT_R32_SINT ,
        VK_FORMAT_R32_SFLOAT ,
        VK_FORMAT_R32G32_UINT ,
        VK_FORMAT_R32G32_SINT ,
        VK_FORMAT_R32G32_SFLOAT ,
        VK_FORMAT_R32G32B32_UINT ,
        VK_FORMAT_R32G32B32_SINT ,
        VK_FORMAT_R32G32B32_SFLOAT ,
        VK_FORMAT_R32G32B32A32_UINT ,
        VK_FORMAT_R32G32B32A32_SINT ,
        VK_FORMAT_R32G32B32A32_SFLOAT ,
        VK_FORMAT_R64_UINT ,
        VK_FORMAT_R64_SINT ,
        VK_FORMAT_R64_SFLOAT ,
        VK_FORMAT_R64G64_UINT ,
        VK_FORMAT_R64G64_SINT ,
        VK_FORMAT_R64G64_SFLOAT ,
        VK_FORMAT_R64G64B64_UINT ,
        VK_FORMAT_R64G64B64_SINT ,
        VK_FORMAT_R64G64B64_SFLOAT ,
        VK_FORMAT_R64G64B64A64_UINT ,
        VK_FORMAT_R64G64B64A64_SINT ,
        VK_FORMAT_R64G64B64A64_SFLOAT ,
        VK_FORMAT_B10G11R11_UFLOAT_PACK32 ,
        VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 ,
        VK_FORMAT_D16_UNORM ,
        VK_FORMAT_X8_D24_UNORM_PACK32 ,
        VK_FORMAT_D32_SFLOAT ,
        VK_FORMAT_S8_UINT ,
        VK_FORMAT_D16_UNORM_S8_UINT ,
        VK_FORMAT_D24_UNORM_S8_UINT ,
        VK_FORMAT_D32_SFLOAT_S8_UINT ,
        VK_FORMAT_BC1_RGB_UNORM_BLOCK ,
        VK_FORMAT_BC1_RGB_SRGB_BLOCK ,
        VK_FORMAT_BC1_RGBA_UNORM_BLOCK ,
        VK_FORMAT_BC1_RGBA_SRGB_BLOCK ,
        VK_FORMAT_BC2_UNORM_BLOCK ,
        VK_FORMAT_BC2_SRGB_BLOCK ,
        VK_FORMAT_BC3_UNORM_BLOCK ,
        VK_FORMAT_BC3_SRGB_BLOCK ,
        VK_FORMAT_BC4_UNORM_BLOCK ,
        VK_FORMAT_BC4_SNORM_BLOCK ,
        VK_FORMAT_BC5_UNORM_BLOCK ,
        VK_FORMAT_BC5_SNORM_BLOCK ,
        VK_FORMAT_BC6H_UFLOAT_BLOCK ,
        VK_FORMAT_BC6H_SFLOAT_BLOCK ,
        VK_FORMAT_BC7_UNORM_BLOCK ,
        VK_FORMAT_BC7_SRGB_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK ,
        VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK ,
        VK_FORMAT_EAC_R11_UNORM_BLOCK ,
        VK_FORMAT_EAC_R11_SNORM_BLOCK ,
        VK_FORMAT_EAC_R11G11_UNORM_BLOCK ,
        VK_FORMAT_EAC_R11G11_SNORM_BLOCK ,
        VK_FORMAT_ASTC_4x4_UNORM_BLOCK ,
        VK_FORMAT_ASTC_4x4_SRGB_BLOCK ,
        VK_FORMAT_ASTC_5x4_UNORM_BLOCK ,
        VK_FORMAT_ASTC_5x4_SRGB_BLOCK ,
        VK_FORMAT_ASTC_5x5_UNORM_BLOCK ,
        VK_FORMAT_ASTC_5x5_SRGB_BLOCK ,
        VK_FORMAT_ASTC_6x5_UNORM_BLOCK ,
        VK_FORMAT_ASTC_6x5_SRGB_BLOCK ,
        VK_FORMAT_ASTC_6x6_UNORM_BLOCK ,
        VK_FORMAT_ASTC_6x6_SRGB_BLOCK ,
        VK_FORMAT_ASTC_8x5_UNORM_BLOCK ,
        VK_FORMAT_ASTC_8x5_SRGB_BLOCK ,
        VK_FORMAT_ASTC_8x6_UNORM_BLOCK ,
        VK_FORMAT_ASTC_8x6_SRGB_BLOCK ,
        VK_FORMAT_ASTC_8x8_UNORM_BLOCK ,
        VK_FORMAT_ASTC_8x8_SRGB_BLOCK ,
        VK_FORMAT_ASTC_10x5_UNORM_BLOCK ,
        VK_FORMAT_ASTC_10x5_SRGB_BLOCK ,
        VK_FORMAT_ASTC_10x6_UNORM_BLOCK ,
        VK_FORMAT_ASTC_10x6_SRGB_BLOCK ,
        VK_FORMAT_ASTC_10x8_UNORM_BLOCK ,
        VK_FORMAT_ASTC_10x8_SRGB_BLOCK ,
        VK_FORMAT_ASTC_10x10_UNORM_BLOCK ,
        VK_FORMAT_ASTC_10x10_SRGB_BLOCK ,
        VK_FORMAT_ASTC_12x10_UNORM_BLOCK ,
        VK_FORMAT_ASTC_12x10_SRGB_BLOCK ,
        VK_FORMAT_ASTC_12x12_UNORM_BLOCK ,
        VK_FORMAT_ASTC_12x12_SRGB_BLOCK ,
        VK_FORMAT_G8B8G8R8_422_UNORM ,
        VK_FORMAT_B8G8R8G8_422_UNORM ,
        VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM ,
        VK_FORMAT_G8_B8R8_2PLANE_420_UNORM ,
        VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM ,
        VK_FORMAT_G8_B8R8_2PLANE_422_UNORM ,
        VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM ,
        VK_FORMAT_R10X6_UNORM_PACK16 ,
        VK_FORMAT_R10X6G10X6_UNORM_2PACK16 ,
        VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 ,
        VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 ,
        VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 ,
        VK_FORMAT_R12X4_UNORM_PACK16 ,
        VK_FORMAT_R12X4G12X4_UNORM_2PACK16 ,
        VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 ,
        VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 ,
        VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 ,
        VK_FORMAT_G16B16G16R16_422_UNORM ,
        VK_FORMAT_B16G16R16G16_422_UNORM ,
        VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM ,
        VK_FORMAT_G16_B16R16_2PLANE_420_UNORM ,
        VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM ,
        VK_FORMAT_G16_B16R16_2PLANE_422_UNORM ,
        VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM ,
        VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT ,
        VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT ,
        VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT ,
        VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT ,
        VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG ,
        VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG ,
        VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG ,
        VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG ,
        VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG ,
        VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG ,
        VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG ,
        VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG ,
        VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT ,
        VK_FORMAT_G8B8G8R8_422_UNORM_KHR ,
        VK_FORMAT_B8G8R8G8_422_UNORM_KHR ,
        VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR ,
        VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR ,
        VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR ,
        VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR ,
        VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR ,
        VK_FORMAT_R10X6_UNORM_PACK16_KHR ,
        VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR ,
        VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR ,
        VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR ,
        VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR ,
        VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR ,
        VK_FORMAT_R12X4_UNORM_PACK16_KHR ,
        VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR ,
        VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR ,
        VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR ,
        VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR ,
        VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR ,
        VK_FORMAT_G16B16G16R16_422_UNORM_KHR ,
        VK_FORMAT_B16G16R16G16_422_UNORM_KHR ,
        VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR ,
        VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR ,
        VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR ,
        VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR ,
        VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR ,
        VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT ,
        VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT ,
        VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT ,
        VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT ,
        VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT ,
        VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT ,
    };

    const char * FormatName[] =
    {
        "VK_FORMAT_UNDEFINED" ,
        "VK_FORMAT_R4G4_UNORM_PACK8" ,
        "VK_FORMAT_R4G4B4A4_UNORM_PACK16" ,
        "VK_FORMAT_B4G4R4A4_UNORM_PACK16" ,
        "VK_FORMAT_R5G6B5_UNORM_PACK16" ,
        "VK_FORMAT_B5G6R5_UNORM_PACK16" ,
        "VK_FORMAT_R5G5B5A1_UNORM_PACK16" ,
        "VK_FORMAT_B5G5R5A1_UNORM_PACK16" ,
        "VK_FORMAT_A1R5G5B5_UNORM_PACK16" ,
        "VK_FORMAT_R8_UNORM" ,
        "VK_FORMAT_R8_SNORM" ,
        "VK_FORMAT_R8_USCALED" ,
        "VK_FORMAT_R8_SSCALED" ,
        "VK_FORMAT_R8_UINT" ,
        "VK_FORMAT_R8_SINT" ,
        "VK_FORMAT_R8_SRGB" ,
        "VK_FORMAT_R8G8_UNORM" ,
        "VK_FORMAT_R8G8_SNORM" ,
        "VK_FORMAT_R8G8_USCALED" ,
        "VK_FORMAT_R8G8_SSCALED" ,
        "VK_FORMAT_R8G8_UINT" ,
        "VK_FORMAT_R8G8_SINT" ,
        "VK_FORMAT_R8G8_SRGB" ,
        "VK_FORMAT_R8G8B8_UNORM" ,
        "VK_FORMAT_R8G8B8_SNORM" ,
        "VK_FORMAT_R8G8B8_USCALED" ,
        "VK_FORMAT_R8G8B8_SSCALED" ,
        "VK_FORMAT_R8G8B8_UINT" ,
        "VK_FORMAT_R8G8B8_SINT" ,
        "VK_FORMAT_R8G8B8_SRGB" ,
        "VK_FORMAT_B8G8R8_UNORM" ,
        "VK_FORMAT_B8G8R8_SNORM" ,
        "VK_FORMAT_B8G8R8_USCALED" ,
        "VK_FORMAT_B8G8R8_SSCALED" ,
        "VK_FORMAT_B8G8R8_UINT" ,
        "VK_FORMAT_B8G8R8_SINT" ,
        "VK_FORMAT_B8G8R8_SRGB" ,
        "VK_FORMAT_R8G8B8A8_UNORM" ,
        "VK_FORMAT_R8G8B8A8_SNORM" ,
        "VK_FORMAT_R8G8B8A8_USCALED" ,
        "VK_FORMAT_R8G8B8A8_SSCALED" ,
        "VK_FORMAT_R8G8B8A8_UINT" ,
        "VK_FORMAT_R8G8B8A8_SINT" ,
        "VK_FORMAT_R8G8B8A8_SRGB" ,
        "VK_FORMAT_B8G8R8A8_UNORM" ,
        "VK_FORMAT_B8G8R8A8_SNORM" ,
        "VK_FORMAT_B8G8R8A8_USCALED" ,
        "VK_FORMAT_B8G8R8A8_SSCALED" ,
        "VK_FORMAT_B8G8R8A8_UINT" ,
        "VK_FORMAT_B8G8R8A8_SINT" ,
        "VK_FORMAT_B8G8R8A8_SRGB" ,
        "VK_FORMAT_A8B8G8R8_UNORM_PACK32" ,
        "VK_FORMAT_A8B8G8R8_SNORM_PACK32" ,
        "VK_FORMAT_A8B8G8R8_USCALED_PACK32" ,
        "VK_FORMAT_A8B8G8R8_SSCALED_PACK32" ,
        "VK_FORMAT_A8B8G8R8_UINT_PACK32" ,
        "VK_FORMAT_A8B8G8R8_SINT_PACK32" ,
        "VK_FORMAT_A8B8G8R8_SRGB_PACK32" ,
        "VK_FORMAT_A2R10G10B10_UNORM_PACK32" ,
        "VK_FORMAT_A2R10G10B10_SNORM_PACK32" ,
        "VK_FORMAT_A2R10G10B10_USCALED_PACK32" ,
        "VK_FORMAT_A2R10G10B10_SSCALED_PACK32" ,
        "VK_FORMAT_A2R10G10B10_UINT_PACK32" ,
        "VK_FORMAT_A2R10G10B10_SINT_PACK32" ,
        "VK_FORMAT_A2B10G10R10_UNORM_PACK32" ,
        "VK_FORMAT_A2B10G10R10_SNORM_PACK32" ,
        "VK_FORMAT_A2B10G10R10_USCALED_PACK32" ,
        "VK_FORMAT_A2B10G10R10_SSCALED_PACK32" ,
        "VK_FORMAT_A2B10G10R10_UINT_PACK32" ,
        "VK_FORMAT_A2B10G10R10_SINT_PACK32" ,
        "VK_FORMAT_R16_UNORM" ,
        "VK_FORMAT_R16_SNORM" ,
        "VK_FORMAT_R16_USCALED" ,
        "VK_FORMAT_R16_SSCALED" ,
        "VK_FORMAT_R16_UINT" ,
        "VK_FORMAT_R16_SINT" ,
        "VK_FORMAT_R16_SFLOAT" ,
        "VK_FORMAT_R16G16_UNORM" ,
        "VK_FORMAT_R16G16_SNORM" ,
        "VK_FORMAT_R16G16_USCALED" ,
        "VK_FORMAT_R16G16_SSCALED" ,
        "VK_FORMAT_R16G16_UINT" ,
        "VK_FORMAT_R16G16_SINT" ,
        "VK_FORMAT_R16G16_SFLOAT" ,
        "VK_FORMAT_R16G16B16_UNORM" ,
        "VK_FORMAT_R16G16B16_SNORM" ,
        "VK_FORMAT_R16G16B16_USCALED" ,
        "VK_FORMAT_R16G16B16_SSCALED" ,
        "VK_FORMAT_R16G16B16_UINT" ,
        "VK_FORMAT_R16G16B16_SINT" ,
        "VK_FORMAT_R16G16B16_SFLOAT" ,
        "VK_FORMAT_R16G16B16A16_UNORM" ,
        "VK_FORMAT_R16G16B16A16_SNORM" ,
        "VK_FORMAT_R16G16B16A16_USCALED" ,
        "VK_FORMAT_R16G16B16A16_SSCALED" ,
        "VK_FORMAT_R16G16B16A16_UINT" ,
        "VK_FORMAT_R16G16B16A16_SINT" ,
        "VK_FORMAT_R16G16B16A16_SFLOAT" ,
        "VK_FORMAT_R32_UINT" ,
        "VK_FORMAT_R32_SINT" ,
        "VK_FORMAT_R32_SFLOAT" ,
        "VK_FORMAT_R32G32_UINT" ,
        "VK_FORMAT_R32G32_SINT" ,
        "VK_FORMAT_R32G32_SFLOAT" ,
        "VK_FORMAT_R32G32B32_UINT" ,
        "VK_FORMAT_R32G32B32_SINT" ,
        "VK_FORMAT_R32G32B32_SFLOAT" ,
        "VK_FORMAT_R32G32B32A32_UINT" ,
        "VK_FORMAT_R32G32B32A32_SINT" ,
        "VK_FORMAT_R32G32B32A32_SFLOAT" ,
        "VK_FORMAT_R64_UINT" ,
        "VK_FORMAT_R64_SINT" ,
        "VK_FORMAT_R64_SFLOAT" ,
        "VK_FORMAT_R64G64_UINT" ,
        "VK_FORMAT_R64G64_SINT" ,
        "VK_FORMAT_R64G64_SFLOAT" ,
        "VK_FORMAT_R64G64B64_UINT" ,
        "VK_FORMAT_R64G64B64_SINT" ,
        "VK_FORMAT_R64G64B64_SFLOAT" ,
        "VK_FORMAT_R64G64B64A64_UINT" ,
        "VK_FORMAT_R64G64B64A64_SINT" ,
        "VK_FORMAT_R64G64B64A64_SFLOAT" ,
        "VK_FORMAT_B10G11R11_UFLOAT_PACK32" ,
        "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32" ,
        "VK_FORMAT_D16_UNORM" ,
        "VK_FORMAT_X8_D24_UNORM_PACK32" ,
        "VK_FORMAT_D32_SFLOAT" ,
        "VK_FORMAT_S8_UINT" ,
        "VK_FORMAT_D16_UNORM_S8_UINT" ,
        "VK_FORMAT_D24_UNORM_S8_UINT" ,
        "VK_FORMAT_D32_SFLOAT_S8_UINT" ,
        "VK_FORMAT_BC1_RGB_UNORM_BLOCK" ,
        "VK_FORMAT_BC1_RGB_SRGB_BLOCK" ,
        "VK_FORMAT_BC1_RGBA_UNORM_BLOCK" ,
        "VK_FORMAT_BC1_RGBA_SRGB_BLOCK" ,
        "VK_FORMAT_BC2_UNORM_BLOCK" ,
        "VK_FORMAT_BC2_SRGB_BLOCK" ,
        "VK_FORMAT_BC3_UNORM_BLOCK" ,
        "VK_FORMAT_BC3_SRGB_BLOCK" ,
        "VK_FORMAT_BC4_UNORM_BLOCK" ,
        "VK_FORMAT_BC4_SNORM_BLOCK" ,
        "VK_FORMAT_BC5_UNORM_BLOCK" ,
        "VK_FORMAT_BC5_SNORM_BLOCK" ,
        "VK_FORMAT_BC6H_UFLOAT_BLOCK" ,
        "VK_FORMAT_BC6H_SFLOAT_BLOCK" ,
        "VK_FORMAT_BC7_UNORM_BLOCK" ,
        "VK_FORMAT_BC7_SRGB_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK" ,
        "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK" ,
        "VK_FORMAT_EAC_R11_UNORM_BLOCK" ,
        "VK_FORMAT_EAC_R11_SNORM_BLOCK" ,
        "VK_FORMAT_EAC_R11G11_UNORM_BLOCK" ,
        "VK_FORMAT_EAC_R11G11_SNORM_BLOCK" ,
        "VK_FORMAT_ASTC_4x4_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_4x4_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_5x4_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_5x4_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_5x5_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_5x5_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_6x5_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_6x5_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_6x6_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_6x6_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_8x5_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_8x5_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_8x6_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_8x6_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_8x8_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_8x8_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_10x5_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_10x5_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_10x6_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_10x6_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_10x8_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_10x8_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_10x10_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_10x10_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_12x10_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_12x10_SRGB_BLOCK" ,
        "VK_FORMAT_ASTC_12x12_UNORM_BLOCK" ,
        "VK_FORMAT_ASTC_12x12_SRGB_BLOCK" ,
        "VK_FORMAT_G8B8G8R8_422_UNORM" ,
        "VK_FORMAT_B8G8R8G8_422_UNORM" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM" ,
        "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM" ,
        "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM" ,
        "VK_FORMAT_R10X6_UNORM_PACK16" ,
        "VK_FORMAT_R10X6G10X6_UNORM_2PACK16" ,
        "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16" ,
        "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16" ,
        "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16" ,
        "VK_FORMAT_R12X4_UNORM_PACK16" ,
        "VK_FORMAT_R12X4G12X4_UNORM_2PACK16" ,
        "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16" ,
        "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16" ,
        "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16" ,
        "VK_FORMAT_G16B16G16R16_422_UNORM" ,
        "VK_FORMAT_B16G16R16G16_422_UNORM" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM" ,
        "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM" ,
        "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM" ,
        "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16" ,
        "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM" ,
        "VK_FORMAT_A4R4G4B4_UNORM_PACK16" ,
        "VK_FORMAT_A4B4G4R4_UNORM_PACK16" ,
        "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK" ,
        "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK" ,
        "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG" ,
        "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG" ,
        "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT" ,
        "VK_FORMAT_G8B8G8R8_422_UNORM_KHR" ,
        "VK_FORMAT_B8G8R8G8_422_UNORM_KHR" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR" ,
        "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR" ,
        "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR" ,
        "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR" ,
        "VK_FORMAT_R10X6_UNORM_PACK16_KHR" ,
        "VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR" ,
        "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_R12X4_UNORM_PACK16_KHR" ,
        "VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR" ,
        "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR" ,
        "VK_FORMAT_G16B16G16R16_422_UNORM_KHR" ,
        "VK_FORMAT_B16G16R16G16_422_UNORM_KHR" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR" ,
        "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR" ,
        "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR" ,
        "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR" ,
        "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT" ,
        "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT" ,
        "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT" ,
        "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT" ,
        "VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT" ,
        "VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT" ,
    };
    
    for (u32 FormatIndex = 0;
             FormatIndex < ArrayCount(FormatsToCheck);
             ++FormatIndex)
    {
        VkFormatProperties FormatProp;
        VkFormat Format = FormatsToCheck[FormatIndex];
        vkGetPhysicalDeviceFormatProperties(GlobalVulkan.PrimaryGPU, Format, &FormatProp);

        if (FormatProp.optimalTilingFeatures & VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT)
        {
            Logn("Format supported %s",FormatName[FormatIndex]);
        }
    };
}




#if 0
i32
VH_CreateBuffer(VkPhysicalDevice PhysicalDevice,VkDevice Device, 
                    VkDeviceSize Size, 
                    VkSharingMode SharingMode,
                    VkMemoryPropertyFlags PropertyFlags, 
                    VkBufferUsageFlags Usage,
                    vulkan_buffer * Buffer,
                    u32 SharedBufferQueueFamilyIndexCount,
                    u32 * SharedBufferQueueFamilyIndexArray)
{
    Buffer->DeviceAllocator = Device; 

    VkBufferCreateInfo BufferCreateInfo;

    BufferCreateInfo.sType                 = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO; // VkStructureType sType;
    BufferCreateInfo.pNext                 = 0;           // Void * pNext;
    BufferCreateInfo.flags                 = 0;           // VkBufferCreateFlags flags;
    BufferCreateInfo.size                  = Size;        // VkDeviceSize size;
    BufferCreateInfo.usage                 = Usage;       // VkBufferUsageFlags usage;
    BufferCreateInfo.sharingMode           = SharingMode; // VkSharingMode sharingMode;

    if ( SharingMode == VK_SHARING_MODE_CONCURRENT )
    {
        if ( SharedBufferQueueFamilyIndexCount == 0 )
        {
            Log("Error buffer creation. Shared buffer requires family queue indexes and count\n");
            return 1;
        }
        BufferCreateInfo.queueFamilyIndexCount = SharedBufferQueueFamilyIndexCount; // u32_t queueFamilyIndexCount;
        BufferCreateInfo.pQueueFamilyIndices   = SharedBufferQueueFamilyIndexArray; // Typedef * pQueueFamilyIndices;
    }
    else
    {
        BufferCreateInfo.queueFamilyIndexCount = 0;           // u32_t queueFamilyIndexCount;
        BufferCreateInfo.pQueueFamilyIndices   = 0;           // Typedef * pQueueFamilyIndices;
    }

    VK_CHECK(vkCreateBuffer(Device, &BufferCreateInfo,0, &Buffer->Buffer));

    vkGetBufferMemoryRequirements(Device, Buffer->Buffer, &Buffer->MemoryRequirements);

    gpu_arena Arena = VH_AllocateMemory(PhysicalDevice,Device, Buffer->MemoryRequirements,PropertyFlags);


    return 0;
}
#endif



void
VH_FreeMemory()
{
    for (u32 MemoryArenaIndex = 0;
                MemoryArenaIndex < GlobalVulkan.DeviceMemoryPools.Count;
                ++MemoryArenaIndex)
    {
        device_memory_pool * DeviceMemoryPool = GlobalVulkan.DeviceMemoryPools.DeviceMemoryPool + MemoryArenaIndex;
                
        if (DeviceMemoryPool->Size > 0)
        {
            if ( VK_VALID_HANDLE(DeviceMemoryPool->DeviceMemory) )
            {
                vkFreeMemory(DeviceMemoryPool->Device,DeviceMemoryPool->DeviceMemory,0);
            }
            DeviceMemoryPool->DeviceMemory = VK_NULL_HANDLE;
            DeviceMemoryPool->Device       = VK_NULL_HANDLE;
            DeviceMemoryPool->Size         = 0; // Size Size
        }
    }
}
u32 
makeAccessMaskPipelineStageFlags(
        u32 accessMask, 
        VkPipelineStageFlags supportedShaderBits = 
                    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT                   | 
                    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT     | 
                    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT  | 
                    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT                 | 
                    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT                 | 
                    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT
                    )
{
    const u32 accessPipes[] = {
        VK_ACCESS_INDIRECT_COMMAND_READ_BIT,
        VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT,
        VK_ACCESS_INDEX_READ_BIT,
        VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,
        VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT,
        VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,
        VK_ACCESS_UNIFORM_READ_BIT,
        supportedShaderBits,
        VK_ACCESS_INPUT_ATTACHMENT_READ_BIT,
        VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
        VK_ACCESS_SHADER_READ_BIT,
        supportedShaderBits,
        VK_ACCESS_SHADER_WRITE_BIT,
        supportedShaderBits,
        VK_ACCESS_COLOR_ATTACHMENT_READ_BIT,
        VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
        VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT,
        VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
        VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT,
        VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
        VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
        VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,
        VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
        VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,
        VK_ACCESS_TRANSFER_READ_BIT,
        VK_PIPELINE_STAGE_TRANSFER_BIT,
        VK_ACCESS_TRANSFER_WRITE_BIT,
        VK_PIPELINE_STAGE_TRANSFER_BIT,
        VK_ACCESS_HOST_READ_BIT,
        VK_PIPELINE_STAGE_HOST_BIT,
        VK_ACCESS_HOST_WRITE_BIT,
        VK_PIPELINE_STAGE_HOST_BIT,
        VK_ACCESS_MEMORY_READ_BIT,
        0,
        VK_ACCESS_MEMORY_WRITE_BIT,
        0,
#if 0//VK_NV_device_generated_commands
        VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV,
        VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV,
        VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV,
        VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV,
#endif
#if 0 
        VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV,
        VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV | supportedShaderBits | VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV,
        VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV,
        VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV,
#endif
    };
    if(!accessMask)
    {
        return VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT;
    }

    u32 pipes = 0;

    for(u32 i = 0; i < ArrayCount(accessPipes); i += 2)
    {
        if(accessPipes[i] & accessMask)
        {
            pipes |= accessPipes[i + 1];
        }
    }

    Assert(pipes != 0);

    return pipes;
}

VkImageMemoryBarrier 
makeImageMemoryBarrier(VkImage            img,
                        VkAccessFlags      srcAccess,
                        VkAccessFlags      dstAccess,
                        VkImageLayout      oldLayout,
                        VkImageLayout      newLayout,
                        VkImageAspectFlags aspectMask)
{
    VkImageMemoryBarrier barrier        = {VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER};
    barrier.srcAccessMask               = srcAccess;
    barrier.dstAccessMask               = dstAccess;
    barrier.oldLayout                   = oldLayout;
    barrier.newLayout                   = newLayout;
    barrier.dstQueueFamilyIndex         = VK_QUEUE_FAMILY_IGNORED;
    barrier.srcQueueFamilyIndex         = VK_QUEUE_FAMILY_IGNORED;
    barrier.image                       = img;
    barrier.subresourceRange            = {0};
    barrier.subresourceRange.aspectMask = aspectMask;
    barrier.subresourceRange.levelCount = VK_REMAINING_MIP_LEVELS;
    barrier.subresourceRange.layerCount = VK_REMAINING_ARRAY_LAYERS;

    return barrier;
}

// A simple wrapper for writing a vkCmdPipelineBarrier for doing things such as
// image layout transitions.
inline void 
cmdImageTransition(VkCommandBuffer    cmd,
                               VkImage            img,
                               VkImageAspectFlags aspects,
                               VkAccessFlags      src,
                               VkAccessFlags      dst,
                               VkImageLayout      oldLayout,
                               VkImageLayout      newLayout)
{

  VkPipelineStageFlags srcPipe = makeAccessMaskPipelineStageFlags(src);
  VkPipelineStageFlags dstPipe = makeAccessMaskPipelineStageFlags(dst);
  VkImageMemoryBarrier barrier = 
      makeImageMemoryBarrier(img, src, dst, oldLayout, newLayout, aspects);

  vkCmdPipelineBarrier(cmd, srcPipe, dstPipe, VK_FALSE, 0, VK_NULL_HANDLE, 0, VK_NULL_HANDLE, 1, &barrier);
}

void
VH_TranstionTo(VkCommandBuffer cmdBuffer, vulkan_image * VulkanImage, VkImageLayout   dstLayout, VkAccessFlags   dstAccesses)
{
    //https://github.com/nvpro-samples/vk_order_independent_transparency/blob/90a4a007187ce7281c2eafb3b447cfb581616d1e/utilities_vk.h
    // Note that in larger applications, we could batch together pipeline
    // barriers for better performance!

    // Maps to barrier.subresourceRange.aspectMask
    VkImageAspectFlags aspectMask = 0;
    if(dstLayout == VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)
    {
        aspectMask = VK_IMAGE_ASPECT_DEPTH_BIT;
        if(VulkanImage->Format == VK_FORMAT_D32_SFLOAT_S8_UINT || VulkanImage->Format == VK_FORMAT_D24_UNORM_S8_UINT)
        {
            aspectMask |= VK_IMAGE_ASPECT_STENCIL_BIT;
        }
    }
    else
    {
        aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    }

    cmdImageTransition(cmdBuffer, VulkanImage->Image, aspectMask, 
                        VulkanImage->CurrentAccess, dstAccesses, 
                        VulkanImage->CurrentLayout, dstLayout);

    // Update current layout, stages, and accesses
    VulkanImage->CurrentLayout = dstLayout;
    VulkanImage->CurrentAccess = dstAccesses;
}

